import asyncio
import telegram
from datetime import time
import random
from telegram.ext import JobQueue
from typing import Final
from telegram import Update
from telegram.ext import (
    filters,
    ApplicationBuilder,
    ContextTypes,
    CommandHandler,
    MessageHandler,
)
import logging


BOT_TOKEN: Final = "6327851474:AAF324IcPVpEoETBkwrNxubZ4w_8jo9sYdk"
DEV_IDS = "1392123839"
BOT_USERNAME = "@dolorPriceYeganeBot"

logging.basicConfig(
    format="%(levelname)s - (%(asctime)s) - %(message)s - (Line: %(lineno)d) - [%(filename)s]",
    filename="log.txt",
    filemode="w",
    datefmt="%H:%M:%S",
    encoding="utf-8",
    level=logging.INFO,
)

logger = logging.getLogger(__name__)


# Job
async def send_message_after_10s(context: ContextTypes.DEFAULT_TYPE):
    logger.info("sending message")
    for dev_id in DEV_IDS:
        await context.bot.send_message(
            chat_id=dev_id, text="This is a message after 10 sec"
        )


# Job
async def currency_alert_job(context: ContextTypes.DEFAULT_TYPE):
    resp = await context.bot.send_message(
        chat_id=context.job.chat_id, text="a message from bot"
    )
    logger.info(resp)


# /set <int>
async def set_currency_alert_handler(
    update: Update, context: ContextTypes.DEFAULT_TYPE
):
    i_sec = context.args
    if i_sec < 10:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="please choose a number more than 10 seconds",
        )
    else:
        await context.job_queue.run_repeating(
            currency_alert_job, first=5, interval=i_sec
        )
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="Your job was created and set ...",
            reply_to_message_id=update.effective_message.id,
        )


async def send_message_after_set_command(context: ContextTypes.DEFAULT_TYPE):
    await context.bot.send_message(
        chat_id=context.job.chat_id, text=f"This is the message after setting"
    )


if __name__ == "__main__":
    bot = ApplicationBuilder().token(BOT_TOKEN).build()
    bot.add_handler(CommandHandler("set", set_currency_alert_handler))
    job_queue = bot.job_queue
    #  job_queue.run_once(send_message_after_10s, when=5)
    job_queue.run_repeating(send_message_after_10s, interval=10, first=5)
    # job_queue.run_daily(send_message_after_10s, time=time(hour=8, minute=0, second=0))
    bot.run_polling()
